name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      cloudia-database:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cloudia-db
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      # Label used to access the service container
      cloudia-backend:
        # Docker Hub image
        image: michaelxschneider/cloudia-app:latest
        # Provide the password for postgres
        env:
          DATABASE_URL: postgresql://postgres:postgres@cloudia-database:5432/cloudia-db?schema=public
          JWT_SECRET: 'topsecret'
          AWS_SIMPLE_API: 'https://ec2.shop'
          ADMIN_MAIL: 'admin@admin.de'
          ADMIN_PWD: 'top_secret'
        ports:
          - 3000:3000

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: "npm"

      - name: Setup
        run: npm ci

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          build: npm run build
          start: npm start

      - name: Test
        run: |
          npm test -- --no-watch --code-coverage --no-progress --browsers=ChromeHeadlessCI

      - name: Codecov Upload
        env:
          CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
        run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov

          chmod +x codecov
          ./codecov -t ${CODECOV_TOKEN}

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Container image
        run: docker build -t ${{ secrets.DOCKER_REPO }}:latest .

      - name: Publish Docker image
        run: docker push ${{ secrets.DOCKER_REPO }}

      - uses: actions/checkout@master
